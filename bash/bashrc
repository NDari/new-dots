# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

## GENERAL OPTIONS ##

# Prevent file overwrite on stdout redirection
# Use `>|` to force redirection to an existing file
set -o noclobber

# Update window size after every command
shopt -s checkwinsize

# dont trigger completion on empty line. This can lock
# up the session if there are a lot of options
shopt -s no_empty_cmd_completion

# Enable history expansion with space
# E.g. typing !!<space> will replace the !! with your last command
bind Space:magic-space

# Turn on recursive globbing (enables ** to recurse all directories)
shopt -s globstar 2> /dev/null

## SMARTER TAB-COMPLETION (Readline bindings) ##

# Perform file completion in a case insensitive fashion
bind "set completion-ignore-case on"

# Treat hyphens and underscores as equivalent
bind "set completion-map-case on"

# Display matches for ambiguous patterns at first tab press
bind "set show-all-if-ambiguous on"

# Immediately add a trailing slash when autocompleting symlinks to directories
bind "set mark-symlinked-directories on"

## SANE HISTORY DEFAULTS ##

# Append to the history file, don't overwrite it
shopt -s histappend

# Save multi-line commands as one command
shopt -s cmdhist

# Record each line as it gets issued
PROMPT_COMMAND='history -a'

# Huge history. Doesn't appear to slow things down, so why not?
HISTSIZE=500000
HISTFILESIZE=100000

# Avoid duplicate entries
HISTCONTROL="erasedups:ignoreboth"

# Don't record some commands
export HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history:clear"

# Use standard ISO 8601 timestamp
# %F equivalent to %Y-%m-%d
# %T equivalent to %H:%M:%S (24-hours format)
HISTTIMEFORMAT='%F %T '

# [[ Env vars ]]
# my config files
export DOTFILES=${HOME}/dotfiles

# XDG
export XDG_CONFIG_HOME=${HOME}/.config
export XDG_DATA_HOME=${HOME}/.local/share
export XDG_CACHE_HOME=${HOME}/.cache
export XDG_STATE_HOME=${HOME}/.local/state

# Term
export TERM=xterm-256color

# Editor
export EDITOR="nvim"
export VISUAL="nvim"

# FZF stuff
export FZF_DEFAULT_COMMAND='rg --files --hidden --glob "!.git"'
export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"

# Bat
export BAT_THEME="gruvbox-dark"

# Go stuff
export GOPATH=${HOME}/.go
export GOBIN=${GOPATH}/bin # has to be abs or use $GOPATH
export GOMODCACHE=${GOPATH}/pkg/mod
export GOCACHE=${XDG_CACHE_HOME}/go-build

# Path
ALLPATHS=(
	"${HOME}/.local/bin"
	"/usr/local/go/bin"
	"${HOME}/.cargo/bin"
	"${GOPATH}/bin"
)
printf -v NEWPATHS "%s:" "${ALLPATHS[@]}"
export PATH=${NEWPATHS}${PATH}

export LANG=en_US.UTF-8

# emacs mode
set -o emacs
bind '"\C-p": history-search-backward'
bind '"\C-n": history-search-forward'

# system aliases
alias e='nvim'
alias vi='NVIM_APPNAME="minvim" nvim'
alias vdiff="nvim -d"
alias less='less -R' # pass escape chars through
alias c='clear'
alias enw='emacs -nw'
alias ls='ls --color=always'
alias h='history | fzf'
# git
alias ga='git add'
alias gd='git diff'
alias gst='git status'
alias gp='git push'
alias gc='git commit'
alias gpo='gp --set-upstream origin $(git rev-parse --abbrev-ref HEAD)'
# tmux
alias tns='tmux new-session -s'
alias tl='tmux list-sessions'
alias ta='tmux attach -t'
# copy and paste commands
alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'
# fix watch
alias watch='watch '

# remove things like ^M on enter for interactive CLIs
stty sane

# shell integrations
eval "$(fzf --bash)"
eval "$(oh-my-posh init bash --config ${DOTFILES}/oh-my-posh/term-theme.toml)"
# eval "$(starship init bash)"
eval "$(direnv hook bash)"
eval "$(zoxide init --cmd cd bash)"

# ssh
env=~/.ssh/agent.env

agent_load_env () { test -f "$env" && . "$env" >| /dev/null ; }

agent_start () {
        (umask 077; ssh-agent >| "$env")
        . "$env" >| /dev/null ;
}

agent_load_env

# agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2= agent not running
agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)

if [ ! "${SSH_AUTH_SOCK}" ] || [ ${agent_run_state} = 2 ]; then
        agent_start
        ssh-add -k
elif [ "${SSH_AUTH_SOCK}" ] && [ ${agent_run_state} = 1 ]; then
        ssh-add -k
fi
unset env
